{"ast":null,"code":"var _jsxFileName = \"/Users/anra/Desktop/lock-one/src/Countdown.js\";\nimport React from 'react';\n\nclass Countdown extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startTimer = () => {\n      this.setState({\n        timerOn: true,\n        timerTimer: this.state.timerTime,\n        timerStart: this.state.timerTime\n      });\n      this.timer = setInterval(() => {\n        const newTime = this.state.timerTime - 10;\n\n        if (newTime >= 0) {\n          this.setState({\n            timerTime: newTime\n          });\n        } else {\n          clearInterval(this.timer);\n          this.setState({\n            timerOn: false\n          });\n          alert(\"Countdown ended\");\n        }\n      }, 10);\n    };\n\n    this.stopTimer = () => {\n      clearInterval(this.timer);\n      this.setState({\n        timerOn: false\n      });\n    };\n\n    this.resetTimer = () => {\n      if (this.state.timerOn === false) {\n        this.setState({\n          timerTime: this.state.timerStart\n        });\n      }\n    };\n\n    this.adjustTimer = input => {\n      const {\n        timerTime,\n        timerOn\n      } = this.state;\n      const max = 216000000;\n\n      if (!timerOn) {\n        if (input === \"incHours\" && timerTime + 360000 < max) {\n          this.setState({\n            timerTime: timerTime + 3600000\n          });\n        } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 3600000\n          });\n        } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\n          this.setState({\n            timerTime: timerTime + 60000\n          });\n        } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 6000\n          });\n        } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\n          this.setState({\n            timerTime: timerTime + 1000\n          });\n        } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n          this.setState({\n            timerTime: timerTime - 1000\n          });\n        }\n      }\n    };\n\n    this.state = {\n      timerOn: false,\n      timerStart: 0,\n      timerTime: 0\n    };\n  }\n\n  render() {\n    const {\n      timerTime,\n      timerStart,\n      timerOn\n    } = this.state;\n    let seconds = (\"0\" + Math.floor(timerTime / 1000 % 60) % 60).slice(-2);\n    let minutes = (\"0\" + Math.floor(timerTime / 1000 % 60)).slice(-2);\n    let hours = (\"0\" + Math.floor(timerTime / 3600000 % 60)).slice(-2);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Countdown\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Countdown-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Countdown\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Countdown-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"Hours : Minutes : Seconds\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Countdown-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"incHours\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }, \"\\u21E7\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"incMinutes\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, \"\\u21E7\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"incSeconds\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"\\u21E7\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"decHours\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }\n    }, \"\\u21E9\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"decMinutes\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"\\u21E9\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.adjustTimer(\"decSeconds\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"\\u21E9\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Countdown-time\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, hours, \" : \", minutes, \" : \", seconds)), timerOn === false && (timerStart === 0 || timerTime === timerStart) && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"Start\"), timerOn === true && timerTime >= 1000 && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.stopTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Stop\"), timerOn === false && timerStart !== 0 && timerStart !== timerTime && timerTime !== 0 && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.startTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, \"Resume\"), (timerOn === false || timerTime < 1000) && timerStart !== timerTime && timerStart > 0 && /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.resetTimer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Reset\"));\n  }\n\n}\n\nexport default Countdown;","map":{"version":3,"sources":["/Users/anra/Desktop/lock-one/src/Countdown.js"],"names":["React","Countdown","Component","constructor","props","startTimer","setState","timerOn","timerTimer","state","timerTime","timerStart","timer","setInterval","newTime","clearInterval","alert","stopTimer","resetTimer","adjustTimer","input","max","render","seconds","Math","floor","slice","minutes","hours"],"mappings":"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","sourcesContent":["import React from 'react';\n\nclass Countdown extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            timerOn: false,\n            timerStart: 0,\n            timerTime: 0\n        }\n    };\n\n    startTimer = () => {\n        this.setState({\n            timerOn: true,\n            timerTimer: this.state.timerTime,\n            timerStart:this.state.timerTime\n        });\n        this.timer = setInterval(() => {\n            const newTime = this.state.timerTime - 10;\n            if (newTime >=0) {\n                this.setState({\n                    timerTime: newTime\n                });\n            } else {\n                clearInterval(this.timer);\n                this.setState({\n                    timerOn: false\n                });\n                alert(\"Countdown ended\");\n            }\n        }, 10);\n    };\n\n    stopTimer = () => {\n        clearInterval(this.timer);\n        this.setState({\n            timerOn: false\n        });\n    };\n\n    resetTimer = () => {\n        if (this.state.timerOn === false) {\n            this.setState({\n                timerTime: this.state.timerStart\n            });\n        }\n    };\n\n    adjustTimer = input => {\n        const { timerTime, timerOn } = this.state;\n        const max = 216000000;\n\n        if (!timerOn) {\n            if (input === \"incHours\" && timerTime + 360000 < max) {\n                this.setState({\n                    timerTime: timerTime + 3600000\n                });\n            } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\n                this.setState({\n                    timerTime: timerTime - 3600000\n                });\n            } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\n                this.setState({\n                    timerTime: timerTime + 60000\n                });\n            } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\n                this.setState({\n                    timerTime: timerTime - 6000\n                });\n            } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\n                this.setState({\n                    timerTime: timerTime + 1000\n                });\n            } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\n                this.setState({\n                    timerTime: timerTime - 1000\n                });\n            }\n        }\n    };\n\n    render() {\n        const { timerTime, timerStart, timerOn } = this.state;\n        let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\n        let minutes = (\"0\" + (Math.floor((timerTime / 1000) % 60) )).slice(-2);\n        let hours = (\"0\" + Math.floor((timerTime / 3600000) % 60)).slice(-2);\n\n\n        return (\n            <div className=\"Countdown\">\n                <div className=\"Countdown-header\">\n                    Countdown\n                </div>\n                <div className=\"Countdown-label\">Hours : Minutes : Seconds</div>\n                <div className=\"Countdown-display\">\n                    <button onClick={() => this.adjustTimer(\"incHours\")}>&#8679;</button>\n                    <button onClick={() => this.adjustTimer(\"incMinutes\")}>&#8679;</button>\n                    <button onClick={() => this.adjustTimer(\"incSeconds\")}>&#8679;</button>\n                    <button onClick={() => this.adjustTimer(\"decHours\")}>&#8681;</button>\n                    <button onClick={() => this.adjustTimer(\"decMinutes\")}>&#8681;</button>\n                    <button onClick={() => this.adjustTimer(\"decSeconds\")}>&#8681;</button>\n                    <div className=\"Countdown-time\">\n                        {hours} : {minutes} : {seconds}\n                    </div>\n                </div>\n\n                {timerOn === false && (timerStart === 0 || timerTime === timerStart) && (\n                    <button onClick={this.startTimer}>Start</button>\n                )}\n                {timerOn === true && timerTime >= 1000 && (\n                    <button onClick={this.stopTimer}>Stop</button>\n                )}\n                {timerOn === false && (timerStart !== 0 && timerStart !== timerTime && timerTime !== 0 ) && (\n                    <button onClick={this.startTimer}>Resume</button>\n                )}\n                {(timerOn === false || timerTime < 1000) && (timerStart !== timerTime && timerStart > 0) && (\n                    <button onClick={this.resetTimer}>Reset</button>\n                )}\n            </div>\n        )\n    }\n}\n\nexport default Countdown;"]},"metadata":{},"sourceType":"module"}